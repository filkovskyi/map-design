{"version":3,"sources":["assets/building-level-all.geojson","assets/building-level-9-16.geojson","assets/building-level-17-20.geojson","assets/building-level-21-29.geojson","components/Map.jsx","views/mavViewer/MapViewer.jsx","views/general/GeneralView.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Map","mapStyle","defaultLatitude","defaultLongitude","activeMenuKey","initialViewportValues","latitude","longitude","zoom","pitch","container","antialias","width","height","labels","initialLayerStyle","useState","viewport","setViewport","layerStyle","setLayerStyle","dataAll","layerSource","setLayerSource","useEffect","onBuildingHeightChange","paint","dataLowest","dataMiddle","dataHigher","className","style","margin","mapboxApiAccessToken","onViewportChange","type","data","MapViewer","gutter","xs","Header","Layout","Content","Footer","Sider","GeneralView","collapsed","setCollapsed","setActiveMenuKey","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","onClick","key","Item","icon","AreaChartOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb74e2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/building-level-all.ae146d5b.geojson\";","export default __webpack_public_path__ + \"static/media/building-level-9-16.00bcc48c.geojson\";","export default __webpack_public_path__ + \"static/media/building-level-17-20.fe362619.geojson\";","export default __webpack_public_path__ + \"static/media/building-level-21-29.4dba5190.geojson\";","import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Layer, Source } from 'react-map-gl';\nimport dataAll from '../assets/building-level-all.geojson'\nimport dataLowest from '../assets/building-level-9-16.geojson'\nimport dataMiddle from '../assets/building-level-17-20.geojson'\nimport dataHigher from '../assets/building-level-21-29.geojson'\n\nconst Map = ({ mapStyle, defaultLatitude, defaultLongitude, activeMenuKey }) => {\n  const initialViewportValues = {\n    latitude: defaultLatitude,\n    longitude: defaultLongitude,\n    zoom: 14,\n    pitch: 45,\n    container: 'map',\n    antialias: true,\n    width: '100%',\n    height: '500px',\n    labels: false,\n  }\n\n  const initialLayerStyle = {\n    'id': 'extrusion',\n    'type': 'fill-extrusion',\n    'source': {\n      \"type\": \"geojson\",\n      \"data\": {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n      },\n    },\n    'paint': {\n      'fill-extrusion-color': '#fff',\n      'fill-extrusion-height': 20,\n      'fill-extrusion-opacity': 0.9\n    }\n  };\n\n  const [viewport, setViewport] = useState(initialViewportValues);\n  const [layerStyle, setLayerStyle] = useState(initialLayerStyle)\n  const [layerSource, setLayerSource] = useState(dataAll)\n\n  useEffect(() => {\n    setViewport({\n      ...initialViewportValues,\n      latitude: defaultLatitude,\n      longitude: defaultLongitude,\n    })\n  }, [defaultLatitude, defaultLongitude]);\n\n\n  useEffect(() => {\n    onBuildingHeightChange(activeMenuKey)\n  }, [activeMenuKey]);\n\n  const onBuildingHeightChange = ({ activeMenuKey }) => {\n    switch (activeMenuKey) {\n      case 'all':\n        setLayerStyle(initialLayerStyle)\n        setLayerSource(dataAll)\n        break;\n      case '9-16':\n        setLayerStyle({\n          ...initialLayerStyle,\n          paint: {\n            'fill-extrusion-color': 'yellow',\n            // set height in meeters for average building level (13 level, level height = 3.5m) in range from 9 to 16\n            'fill-extrusion-height': 45.5,\n          }\n        })\n        setLayerSource(dataLowest)\n        break;\n      case '17-20':\n        setLayerStyle({\n          ...initialLayerStyle,\n          paint: {\n            'fill-extrusion-color': 'orange',\n            // set height in meeters for average building level (18 level, level height = 3.5m) in range from 16 to 20\n            'fill-extrusion-height': 63,\n          }\n        })\n        setLayerSource(dataMiddle)\n        break;\n      case '21-29':\n        setLayerStyle({\n          ...initialLayerStyle,\n          paint: {\n            'fill-extrusion-color': 'red',\n            // set height in meeters for average building level (25 level, level height = 3.5m) in range from 20 to 29\n            'fill-extrusion-height': 87.5,\n          }\n        })\n        setLayerSource(dataHigher)\n        break;\n      default:\n        setLayerStyle(initialLayerStyle)\n        setLayerSource(dataAll)\n    }\n  };\n\n  return (\n    <div className={'map-box-wrapper'}>\n      <ReactMapGL\n        {...viewport}\n        style={{\n          margin: '0 auto'\n        }}\n        mapStyle={mapStyle}\n        //better to use environment variable to store mapboxApiAccessToken\n        mapboxApiAccessToken={'pk.eyJ1IjoiaXZhbmRyYWdvIiwiYSI6ImNrZ2Rzdng3dzEwam4yeXFhNmtkM2FlejMifQ.lhT4dTPZIMEBqm6wLQtxaQ'}\n        onViewportChange={(viewport) => setViewport(viewport)}\n      >\n        <Source type=\"geojson\" data={layerSource}>\n          <Layer {...layerStyle} />\n        </Source>\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default Map;","import React, { useState } from 'react';\nimport { Row, Col } from 'antd';\nimport Map from '../../components/Map'\n\nconst MapViewer = (activeMenuKey) => {\n  const [defaultLatitude, setDefaultLatitude] = useState(50.386030)\n  const [defaultLongitude, setDefaultLongitude] = useState(30.472110)\n\n  return (\n    <Row gutter={24}>\n      <Col xs={24}>\n        <Map\n          mapStyle={'mapbox://styles/mapbox/streets-v8'}\n          defaultLatitude={defaultLatitude}\n          defaultLongitude={defaultLongitude}\n          activeMenuKey={activeMenuKey}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default MapViewer;","import React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { AreaChartOutlined } from '@ant-design/icons';\nimport MapViewer from '../mavViewer/MapViewer'\nimport './GeneralView.css'\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst GeneralView = () => {\n  const [collapsed, setCollapsed] = useState(false)\n  const [activeMenuKey, setActiveMenuKey] = useState('all')\n  const toggleVisible = () => setCollapsed(!collapsed);\n  const menuHandler = ({ key }) => setActiveMenuKey(key)\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={toggleVisible}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" onClick={menuHandler}>\n          <Menu.Item key=\"all\" icon={<AreaChartOutlined />}>\n            Show All\n          </Menu.Item>\n          <Menu.Item key=\"9-16\" icon={<AreaChartOutlined />}>\n            Show 9-16\n          </Menu.Item>\n          <Menu.Item key=\"17-20\" icon={<AreaChartOutlined />}>\n            Show 17-20\n          </Menu.Item>\n          <Menu.Item key=\"21-29\" icon={<AreaChartOutlined />}>\n            Show 21-29\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n        <Content style={{ margin: '0 16px' }}>\n          <MapViewer activeMenuKey={activeMenuKey} />\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>MapBox Kyiv buildings height Created by Filkovskyi Sergey</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default GeneralView;","import React from 'react';\nimport GeneralView from './views/general/GeneralView'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GeneralView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// libs\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}